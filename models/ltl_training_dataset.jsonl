{"instruction": "maintain altitude above 2 meters until reaching waypoint_a", "output": "above(2.0) U at(waypoint_a)"}
{"instruction": "stay in bounds until battery level drops below 25%", "output": "in_bounds() U battery_level(25)"}
{"instruction": "keep moving until you reach waypoint_b", "output": "moving() U at(waypoint_b)"}
{"instruction": "maintain position above 1.5 meters until landing command is given", "output": "above(1.5) U land()"}
{"instruction": "continue hovering until wind speed exceeds 15 knots", "output": "hover(1) U wind_speed(15)"}
{"instruction": "stay clear of obstacle_1 until reaching waypoint_c", "output": "clear_of(obstacle_1) U at(waypoint_c)"}
{"instruction": "maintain altitude below 4 meters until scanning area_1", "output": "below(4.0) U scan(area_1)"}
{"instruction": "keep station above 3 meters until emergency is detected", "output": "above(3.0) U emergency_detected()"}
{"instruction": "stay near base_station until system check completes", "output": "near(base_station, 2.0) U system_check()"}
{"instruction": "maintain flight in zone_1 until waypoint_d is reached", "output": "in_area(zone_1) U at(waypoint_d)"}
{"instruction": "keep altitude above 0.5 meters until touching down at landing_pad", "output": "above(0.5) U at(landing_pad)"}
{"instruction": "stay stationary until move command is received", "output": "stationary() U move_to(waypoint_a)"}
{"instruction": "maintain battery above 40% until returning to base", "output": "battery_level(40) U at(base_station)"}
{"instruction": "keep distance from danger_zone until mission completes", "output": "clear_of(danger_zone) U at(base_station)"}
{"instruction": "stay above 2.5 meters until entering area_2", "output": "above(2.5) U in_area(area_2)"}
{"instruction": "maintain speed until reaching waypoint_e", "output": "moving() U at(waypoint_e)"}
{"instruction": "keep scanning until battery drops below 30%", "output": "scan(area_1) U battery_level(30)"}
{"instruction": "stay in restricted_zone until clearance is given", "output": "in_area(restricted_zone) U clear_of(restricted_zone)"}
{"instruction": "maintain altitude above 3.5 meters until obstacle_2 is passed", "output": "above(3.5) U clear_of(obstacle_2)"}
{"instruction": "keep hovering until wind conditions improve", "output": "hover(5) U !wind_speed(10)"}
{"instruction": "stay near waypoint_a until area_3 is scanned", "output": "near(waypoint_a, 1.0) U scan(area_3)"}
{"instruction": "maintain position until emergency return is triggered", "output": "stationary() U emergency_return()"}
{"instruction": "keep altitude below 5 meters until reaching wp_alpha", "output": "below(5.0) U at(wp_alpha)"}
{"instruction": "stay clear of perimeter_A until mission starts", "output": "clear_of(perimeter_A) U move_to(waypoint_a)"}
{"instruction": "maintain battery above 50% until landing at landing_pad", "output": "battery_level(50) U at(landing_pad)"}
{"instruction": "keep moving until system check is complete", "output": "moving() U system_check()"}
{"instruction": "stay above 1.8 meters until entering zone_2", "output": "above(1.8) U in_area(zone_2)"}
{"instruction": "maintain distance from obstacle_1 until reaching waypoint_b", "output": "clear_of(obstacle_1) U at(waypoint_b)"}
{"instruction": "keep hovering until wind speed drops below 8 knots", "output": "hover(3) U !wind_speed(8)"}
{"instruction": "stay in area_1 until waypoint_c is reached", "output": "in_area(area_1) U at(waypoint_c)"}
{"instruction": "maintain altitude above 2.2 meters until scanning area_2", "output": "above(2.2) U scan(area_2)"}
{"instruction": "keep battery above 35% until returning to base_station", "output": "battery_level(35) U at(base_station)"}
{"instruction": "stay clear of danger_zone until landing command", "output": "clear_of(danger_zone) U land()"}
{"instruction": "maintain position until emergency is detected", "output": "stationary() U emergency_detected()"}
{"instruction": "keep moving until reaching wp_beta", "output": "moving() U at(wp_beta)"}
{"instruction": "stay above 3.2 meters until obstacle_2 is cleared", "output": "above(3.2) U clear_of(obstacle_2)"}
{"instruction": "maintain distance from restricted_zone until waypoint_d", "output": "clear_of(restricted_zone) U at(waypoint_d)"}
{"instruction": "keep hovering until wind conditions are safe", "output": "hover(10) U !wind_speed(12)"}
{"instruction": "stay near waypoint_e until area_3 scan completes", "output": "near(waypoint_e, 1.5) U scan(area_3)"}
{"instruction": "maintain altitude below 4.5 meters until landing", "output": "below(4.5) U land()"}
{"instruction": "keep battery above 45% until reaching wp_gamma", "output": "battery_level(45) U at(wp_gamma)"}
{"instruction": "stay in zone_3 until system check finishes", "output": "in_area(zone_3) U system_check()"}
{"instruction": "maintain speed until emergency return is triggered", "output": "moving() U emergency_return()"}
{"instruction": "keep distance from obstacle_1 until waypoint_a is reached", "output": "clear_of(obstacle_1) U at(waypoint_a)"}
{"instruction": "stay above 2.8 meters until entering area_1", "output": "above(2.8) U in_area(area_1)"}
{"instruction": "maintain position until wind speed exceeds 20 knots", "output": "stationary() U wind_speed(20)"}
{"instruction": "keep hovering until battery drops below 20%", "output": "hover(15) U battery_level(20)"}
{"instruction": "stay clear of perimeter_A until mission completes", "output": "clear_of(perimeter_A) U at(base_station)"}
{"instruction": "maintain altitude above 1.2 meters until reaching waypoint_b", "output": "above(1.2) U at(waypoint_b)"}
{"instruction": "keep moving until scanning area_2", "output": "moving() U scan(area_2)"}
{"instruction": "stay in bounds until landing at landing_pad", "output": "in_bounds() U at(landing_pad)"}
{"instruction": "maintain battery above 30% until emergency return", "output": "battery_level(30) U emergency_return()"}
{"instruction": "keep distance from danger_zone until reaching waypoint_c", "output": "clear_of(danger_zone) U at(waypoint_c)"}
{"instruction": "fly to waypoint_b but never enter restricted_zone", "output": "F(at(waypoint_b)) & G(!in_area(restricted_zone))"}
{"instruction": "scan area_1 while avoiding obstacle_1", "output": "F(scan(area_1)) & G(clear_of(obstacle_1))"}
{"instruction": "go to waypoint_a but never fly below 1 meter", "output": "F(at(waypoint_a)) & G(!below(1.0))"}
{"instruction": "move to waypoint_c while staying away from danger_zone", "output": "F(at(waypoint_c)) & G(!in_area(danger_zone))"}
{"instruction": "hover for 10 seconds but never enter area_2", "output": "F(hover(10)) & G(!in_area(area_2))"}
{"instruction": "navigate to waypoint_d while avoiding obstacle_2", "output": "F(at(waypoint_d)) & G(clear_of(obstacle_2))"}
{"instruction": "fly to wp_alpha but never go above 4 meters", "output": "F(at(wp_alpha)) & G(!above(4.0))"}
{"instruction": "scan area_3 while staying clear of perimeter_A", "output": "F(scan(area_3)) & G(clear_of(perimeter_A))"}
{"instruction": "go to waypoint_e but never enter restricted_zone", "output": "F(at(waypoint_e)) & G(!in_area(restricted_zone))"}
{"instruction": "move to base_station while avoiding area_1", "output": "F(at(base_station)) & G(!in_area(area_1))"}
{"instruction": "hover until landing but never enter danger_zone", "output": "F(hover(5)) & G(!in_area(danger_zone))"}
{"instruction": "fly to wp_beta while staying away from obstacle_1", "output": "F(at(wp_beta)) & G(clear_of(obstacle_1))"}
{"instruction": "scan area_2 but never fly below 0.8 meters", "output": "F(scan(area_2)) & G(!below(0.8))"}
{"instruction": "go to waypoint_a while avoiding zone_3", "output": "F(at(waypoint_a)) & G(!in_area(zone_3))"}
{"instruction": "move to landing_pad but never enter restricted_zone", "output": "F(at(landing_pad)) & G(!in_area(restricted_zone))"}
{"instruction": "hover for 15 seconds while staying clear of obstacle_2", "output": "F(hover(15)) & G(clear_of(obstacle_2))"}
{"instruction": "fly to waypoint_b but never go above 5 meters", "output": "F(at(waypoint_b)) & G(!above(5.0))"}
{"instruction": "scan area_1 while avoiding perimeter_A", "output": "F(scan(area_1)) & G(clear_of(perimeter_A))"}
{"instruction": "go to wp_gamma while staying away from danger_zone", "output": "F(at(wp_gamma)) & G(!in_area(danger_zone))"}
{"instruction": "move to waypoint_c but never enter area_3", "output": "F(at(waypoint_c)) & G(!in_area(area_3))"}
{"instruction": "hover until emergency return but never enter restricted_zone", "output": "F(hover(8)) & G(!in_area(restricted_zone))"}
{"instruction": "fly to waypoint_d while avoiding obstacle_1", "output": "F(at(waypoint_d)) & G(clear_of(obstacle_1))"}
{"instruction": "scan area_2 but never fly below 1.2 meters", "output": "F(scan(area_2)) & G(!below(1.2))"}
{"instruction": "go to waypoint_e while staying clear of zone_1", "output": "F(at(waypoint_e)) & G(!in_area(zone_1))"}
{"instruction": "move to base_station but never enter area_2", "output": "F(at(base_station)) & G(!in_area(area_2))"}
{"instruction": "hover for 20 seconds while avoiding danger_zone", "output": "F(hover(20)) & G(!in_area(danger_zone))"}
{"instruction": "fly to wp_alpha while staying away from obstacle_2", "output": "F(at(wp_alpha)) & G(clear_of(obstacle_2))"}
{"instruction": "scan area_3 but never go above 3.5 meters", "output": "F(scan(area_3)) & G(!above(3.5))"}
{"instruction": "go to waypoint_a while avoiding perimeter_A", "output": "F(at(waypoint_a)) & G(clear_of(perimeter_A))"}
{"instruction": "move to landing_pad but never enter zone_2", "output": "F(at(landing_pad)) & G(!in_area(zone_2))"}
{"instruction": "hover until system check but never enter restricted_zone", "output": "F(hover(12)) & G(!in_area(restricted_zone))"}
{"instruction": "if battery drops below 30%, immediately return to base", "output": "G(battery_level(30) -> F(emergency_return()))"}
{"instruction": "whenever emergency is detected, land immediately", "output": "G(emergency_detected() -> F(land()))"}
{"instruction": "if wind speed exceeds 20 knots, hover until conditions improve", "output": "G(wind_speed(20) -> F(hover(10)))"}
{"instruction": "whenever battery falls below 25%, go to nearest charging station", "output": "G(battery_level(25) -> F(at(base_station)))"}
{"instruction": "if obstacle is detected, immediately change altitude", "output": "G(!clear_of(obstacle_1) -> F(above(3.0)))"}
{"instruction": "whenever entering restricted zone, immediately exit", "output": "G(in_area(restricted_zone) -> F(!in_area(restricted_zone)))"}
{"instruction": "if altitude drops below 1 meter, immediately climb to 2 meters", "output": "G(below(1.0) -> F(above(2.0)))"}
{"instruction": "whenever system check fails, return to base immediately", "output": "G(!system_check() -> F(emergency_return()))"}
{"instruction": "if drone goes out of bounds, immediately return to flight zone", "output": "G(!in_bounds() -> F(in_bounds()))"}
{"instruction": "whenever battery reaches 20%, land at nearest safe location", "output": "G(battery_level(20) -> F(land()))"}
{"instruction": "if wind speed exceeds 15 knots, avoid high altitude flight", "output": "G(wind_speed(15) -> G(!above(4.0)))"}
{"instruction": "whenever emergency detected, stop all current operations", "output": "G(emergency_detected() -> F(stationary()))"}
{"instruction": "if drone enters danger zone, immediately exit and return to base", "output": "G(in_area(danger_zone) -> F(at(base_station)))"}
{"instruction": "whenever battery below 35%, limit flight to nearby areas only", "output": "G(battery_level(35) -> G(near(base_station, 5.0)))"}
{"instruction": "if altitude exceeds 5 meters, immediately descend to safe level", "output": "G(above(5.0) -> F(below(4.0)))"}
{"instruction": "whenever obstacle detected ahead, change course immediately", "output": "G(!clear_of(obstacle_2) -> F(clear_of(obstacle_2)))"}
{"instruction": "if wind speed drops below 5 knots, resume normal operations", "output": "G(!wind_speed(5) -> F(moving()))"}
{"instruction": "whenever battery reaches 40%, plan return route to base", "output": "G(battery_level(40) -> F(move_to(base_station)))"}
{"instruction": "if drone becomes stationary for too long, check system status", "output": "G(stationary() -> F(system_check()))"}
{"instruction": "whenever entering area_1, maintain altitude above 2 meters", "output": "G(in_area(area_1) -> G(above(2.0)))"}
{"instruction": "if emergency return is triggered, land immediately upon reaching base", "output": "G(emergency_return() -> F(at(base_station) & X(land())))"}
{"instruction": "whenever scanning area_2, stay clear of obstacle_1", "output": "G(scan(area_2) -> G(clear_of(obstacle_1)))"}
{"instruction": "if battery drops below 15%, perform emergency landing", "output": "G(battery_level(15) -> F(land()))"}
{"instruction": "whenever wind speed exceeds 25 knots, return to base immediately", "output": "G(wind_speed(25) -> F(emergency_return()))"}
{"instruction": "if drone goes above 6 meters, immediately descend to 4 meters", "output": "G(above(6.0) -> F(below(4.0)))"}
{"instruction": "whenever entering zone_3, maintain distance from perimeter_A", "output": "G(in_area(zone_3) -> G(clear_of(perimeter_A)))"}
{"instruction": "if obstacle_2 is detected, change altitude to 3 meters", "output": "G(!clear_of(obstacle_2) -> F(above(3.0)))"}
{"instruction": "whenever battery reaches 30%, reduce flight speed", "output": "G(battery_level(30) -> F(hover(5)))"}
{"instruction": "if emergency is detected while scanning, stop scanning immediately", "output": "G(emergency_detected() & scan(area_1) -> F(!scan(area_1)))"}
{"instruction": "whenever entering restricted_zone, activate avoidance mode", "output": "G(in_area(restricted_zone) -> F(!in_area(restricted_zone)))"}
{"instruction": "if wind speed exceeds 30 knots, land immediately", "output": "G(wind_speed(30) -> F(land()))"}
{"instruction": "whenever battery drops to 10%, perform emergency procedures", "output": "G(battery_level(10) -> F(emergency_return()))"}
{"instruction": "if drone altitude exceeds safe limits, immediately correct", "output": "G(above(5.5) -> F(below(5.0)))"}
{"instruction": "whenever system check indicates problems, return to base", "output": "G(!system_check() -> F(at(base_station)))"}
{"instruction": "go to waypoint_a then immediately scan area_1", "output": "F(at(waypoint_a) & X(scan(area_1)))"}
{"instruction": "move to waypoint_b then immediately hover for 5 seconds", "output": "F(at(waypoint_b) & X(hover(5)))"}
{"instruction": "reach waypoint_c then immediately go to waypoint_d", "output": "F(at(waypoint_c) & X(F(at(waypoint_d))))"}
{"instruction": "land at landing_pad then immediately start system check", "output": "F(at(landing_pad) & X(system_check()))"}
{"instruction": "fly to wp_alpha then immediately scan area_2", "output": "F(at(wp_alpha) & X(scan(area_2)))"}
{"instruction": "reach waypoint_e then immediately move to base_station", "output": "F(at(waypoint_e) & X(F(at(base_station))))"}
{"instruction": "hover for 10 seconds then immediately fly to waypoint_a", "output": "F(hover(10) & X(move_to(waypoint_a)))"}
{"instruction": "scan area_3 then immediately go to waypoint_b", "output": "F(scan(area_3) & X(move_to(waypoint_b)))"}
{"instruction": "reach wp_beta then immediately hover for 8 seconds", "output": "F(at(wp_beta) & X(hover(8)))"}
{"instruction": "land then immediately start emergency procedures", "output": "F(land() & X(emergency_return()))"}
{"instruction": "fly to waypoint_c then immediately scan area_1", "output": "F(at(waypoint_c) & X(scan(area_1)))"}
{"instruction": "reach waypoint_d then immediately go to wp_gamma", "output": "F(at(waypoint_d) & X(F(at(wp_gamma))))"}
{"instruction": "hover for 15 seconds then immediately move to landing_pad", "output": "F(hover(15) & X(move_to(landing_pad)))"}
{"instruction": "scan area_2 then immediately fly to waypoint_e", "output": "F(scan(area_2) & X(move_to(waypoint_e)))"}
{"instruction": "reach base_station then immediately start system check", "output": "F(at(base_station) & X(system_check()))"}
{"instruction": "fly to waypoint_a then immediately hover for 12 seconds", "output": "F(at(waypoint_a) & X(hover(12)))"}
{"instruction": "scan area_1 then immediately go to waypoint_b", "output": "F(scan(area_1) & X(move_to(waypoint_b)))"}
{"instruction": "reach waypoint_c then immediately scan area_3", "output": "F(at(waypoint_c) & X(scan(area_3)))"}
{"instruction": "hover for 20 seconds then immediately move to waypoint_d", "output": "F(hover(20) & X(move_to(waypoint_d)))"}
{"instruction": "land at landing_pad then immediately start emergency return", "output": "F(at(landing_pad) & X(emergency_return()))"}
{"instruction": "fly to wp_alpha then immediately hover for 6 seconds", "output": "F(at(wp_alpha) & X(hover(6)))"}
{"instruction": "scan area_2 then immediately go to waypoint_e", "output": "F(scan(area_2) & X(move_to(waypoint_e)))"}
{"instruction": "reach waypoint_a then immediately move to wp_beta", "output": "F(at(waypoint_a) & X(F(at(wp_beta))))"}
{"instruction": "hover for 25 seconds then immediately scan area_1", "output": "F(hover(25) & X(scan(area_1)))"}
{"instruction": "fly to waypoint_b then immediately land", "output": "F(at(waypoint_b) & X(land()))"}
{"instruction": "scan area_3 then immediately hover for 18 seconds", "output": "F(scan(area_3) & X(hover(18)))"}
{"instruction": "reach waypoint_c then immediately go to base_station", "output": "F(at(waypoint_c) & X(F(at(base_station))))"}
{"instruction": "hover for 30 seconds then immediately fly to waypoint_d", "output": "F(hover(30) & X(move_to(waypoint_d)))"}
{"instruction": "scan area_1 then immediately move to wp_gamma", "output": "F(scan(area_1) & X(move_to(wp_gamma)))"}
{"instruction": "reach waypoint_e then immediately hover for 14 seconds", "output": "F(at(waypoint_e) & X(hover(14)))"}
{"instruction": "fly to landing_pad then immediately start system check", "output": "F(at(landing_pad) & X(system_check()))"}
{"instruction": "hover for 22 seconds then immediately scan area_2", "output": "F(hover(22) & X(scan(area_2)))"}
{"instruction": "scan area_3 then immediately go to waypoint_a", "output": "F(scan(area_3) & X(move_to(waypoint_a)))"}
{"instruction": "reach wp_alpha then immediately hover for 16 seconds", "output": "F(at(wp_alpha) & X(hover(16)))"}
{"instruction": "fly to waypoint_b then immediately move to waypoint_c", "output": "F(at(waypoint_b) & X(F(at(waypoint_c))))"}
{"instruction": "hover for 28 seconds then immediately land", "output": "F(hover(28) & X(land()))"}
{"instruction": "scan area_1 then immediately fly to waypoint_d", "output": "F(scan(area_1) & X(move_to(waypoint_d)))"}
{"instruction": "reach waypoint_e then immediately scan area_2", "output": "F(at(waypoint_e) & X(scan(area_2)))"}
{"instruction": "hover for 35 seconds then immediately move to base_station", "output": "F(hover(35) & X(move_to(base_station)))"}
{"instruction": "fly to wp_beta then immediately hover for 24 seconds", "output": "F(at(wp_beta) & X(hover(24)))"}
{"instruction": "scan area_3 then immediately go to waypoint_a", "output": "F(scan(area_3) & X(move_to(waypoint_a)))"}
{"instruction": "reach waypoint_b then immediately start emergency return", "output": "F(at(waypoint_b) & X(emergency_return()))"}
{"instruction": "hover for 40 seconds then immediately scan area_1", "output": "F(hover(40) & X(scan(area_1)))"}
{"instruction": "fly to waypoint_c then immediately hover for 32 seconds", "output": "F(at(waypoint_c) & X(hover(32)))"}
{"instruction": "always stay above 1.5m while flying to waypoint_a and scanning area_1", "output": "G(above(1.5)) & F(at(waypoint_a)) & F(scan(area_1))"}
{"instruction": "maintain altitude above 2m until reaching waypoint_b, then immediately scan area_2", "output": "(above(2.0) U at(waypoint_b)) & F(at(waypoint_b) & X(scan(area_2)))"}
{"instruction": "go to waypoint_c while avoiding restricted_zone, then hover for 10 seconds", "output": "F(at(waypoint_c)) & G(!in_area(restricted_zone)) & F(at(waypoint_c) & X(hover(10)))"}
{"instruction": "if battery drops below 25%, return to base and land immediately", "output": "G(battery_level(25) -> F(at(base_station) & X(land())))"}
{"instruction": "scan area_1 and area_2 while staying above 2.5m and avoiding obstacle_1", "output": "F(scan(area_1)) & F(scan(area_2)) & G(above(2.5)) & G(clear_of(obstacle_1))"}
{"instruction": "maintain battery above 30% until landing, then start system check", "output": "(battery_level(30) U land()) & F(land() & X(system_check()))"}
{"instruction": "fly to waypoint_d but never enter danger_zone, and hover for 15 seconds upon arrival", "output": "F(at(waypoint_d)) & G(!in_area(danger_zone)) & F(at(waypoint_d) & X(hover(15)))"}
{"instruction": "continuously monitor area_1 while maintaining altitude above 3m until emergency", "output": "G(F(scan(area_1))) & (above(3.0) U emergency_detected())"}
{"instruction": "if wind exceeds 20 knots, hover until conditions improve, then resume flight", "output": "G(wind_speed(20) -> F(hover(10) U !wind_speed(15))) & F(!wind_speed(15) & X(moving()))"}
{"instruction": "go to waypoint_e then waypoint_a, always staying clear of obstacle_2", "output": "F(at(waypoint_e) & X(F(at(waypoint_a)))) & G(clear_of(obstacle_2))"}
{"instruction": "maintain distance from perimeter_A until reaching waypoint_b, then scan area_3", "output": "(clear_of(perimeter_A) U at(waypoint_b)) & F(at(waypoint_b) & X(scan(area_3)))"}
{"instruction": "if emergency detected while scanning, stop scanning and return to base immediately", "output": "G(emergency_detected() & scan(area_1) -> F(!scan(area_1) & X(emergency_return())))"}
{"instruction": "fly to wp_alpha while avoiding zone_1, maintain altitude above 2.2m", "output": "F(at(wp_alpha)) & G(!in_area(zone_1)) & G(above(2.2))"}
{"instruction": "hover for 20 seconds then move to waypoint_c, but never enter restricted_zone", "output": "F(hover(20) & X(move_to(waypoint_c))) & G(!in_area(restricted_zone))"}
{"instruction": "scan area_2 until battery drops below 40%, then return to base", "output": "(scan(area_2) U battery_level(40)) & F(battery_level(40) & X(F(at(base_station))))"}
{"instruction": "maintain speed until reaching waypoint_d, then immediately land", "output": "(moving() U at(waypoint_d)) & F(at(waypoint_d) & X(land()))"}
{"instruction": "go to waypoint_a and waypoint_b sequentially while staying above 1.8m", "output": "F(at(waypoint_a) & X(F(at(waypoint_b)))) & G(above(1.8))"}
{"instruction": "if obstacle_1 detected, change altitude to 3.5m and continue to waypoint_e", "output": "G(!clear_of(obstacle_1) -> F(above(3.5) & X(F(at(waypoint_e)))))"}
{"instruction": "hover until wind drops below 10 knots, then fly to wp_beta and scan area_1", "output": "(hover(5) U !wind_speed(10)) & F(!wind_speed(10) & X(F(at(wp_beta) & X(scan(area_1)))))"}
{"instruction": "maintain battery above 35% until landing at base, then start emergency procedures", "output": "(battery_level(35) U at(base_station)) & F(at(base_station) & X(land() & X(emergency_return())))"}
{"instruction": "scan area_3 while avoiding danger_zone and maintaining altitude above 2.8m", "output": "F(scan(area_3)) & G(!in_area(danger_zone)) & G(above(2.8))"}
{"instruction": "go to waypoint_c then waypoint_d then waypoint_e, always staying in bounds", "output": "F(at(waypoint_c) & X(F(at(waypoint_d) & X(F(at(waypoint_e)))))) & G(in_bounds())"}
{"instruction": "if battery reaches 20%, immediately return to base and land", "output": "G(battery_level(20) -> F(at(base_station) & X(land())))"}
{"instruction": "maintain altitude below 4m until scanning area_2, then hover for 25 seconds", "output": "(below(4.0) U scan(area_2)) & F(scan(area_2) & X(hover(25)))"}
{"instruction": "fly to wp_gamma while staying clear of obstacle_2, then scan area_1", "output": "F(at(wp_gamma)) & G(clear_of(obstacle_2)) & F(at(wp_gamma) & X(scan(area_1)))"}
{"instruction": "hover until system check completes, then move to waypoint_a and land", "output": "(hover(10) U system_check()) & F(system_check() & X(F(at(waypoint_a) & X(land()))))"}
{"instruction": "go to waypoint_b but never enter area_1, maintain speed until arrival", "output": "F(at(waypoint_b)) & G(!in_area(area_1)) & (moving() U at(waypoint_b))"}
{"instruction": "if wind exceeds 25 knots, hover until conditions improve, then resume scanning", "output": "G(wind_speed(25) -> F(hover(15) U !wind_speed(20))) & F(!wind_speed(20) & X(scan(area_3)))"}
{"instruction": "scan area_1 and area_2 sequentially while staying above 3.2m", "output": "F(scan(area_1) & X(scan(area_2))) & G(above(3.2))"}
{"instruction": "maintain distance from perimeter_A until reaching waypoint_c, then hover for 30 seconds", "output": "(clear_of(perimeter_A) U at(waypoint_c)) & F(at(waypoint_c) & X(hover(30)))"}
{"instruction": "fly to waypoint_d then waypoint_e, always avoiding restricted_zone", "output": "F(at(waypoint_d) & X(F(at(waypoint_e)))) & G(!in_area(restricted_zone))"}
{"instruction": "if emergency detected while moving, stop immediately and return to base", "output": "G(emergency_detected() & moving() -> F(stationary() & X(emergency_return())))"}
{"instruction": "hover for 35 seconds then move to landing_pad, maintain altitude above 1.2m", "output": "F(hover(35) & X(move_to(landing_pad))) & G(above(1.2))"}
{"instruction": "scan area_2 until battery drops below 30%, then return to base and land", "output": "(scan(area_2) U battery_level(30)) & F(battery_level(30) & X(F(at(base_station) & X(land()))))"}
{"instruction": "go to waypoint_a while avoiding obstacle_1, then immediately scan area_3", "output": "F(at(waypoint_a)) & G(clear_of(obstacle_1)) & F(at(waypoint_a) & X(scan(area_3)))"}
{"instruction": "maintain battery above 40% until reaching wp_alpha, then hover for 18 seconds", "output": "(battery_level(40) U at(wp_alpha)) & F(at(wp_alpha) & X(hover(18)))"}
{"instruction": "fly to waypoint_b then waypoint_c then waypoint_d, staying clear of danger_zone", "output": "F(at(waypoint_b) & X(F(at(waypoint_c) & X(F(at(waypoint_d)))))) & G(!in_area(danger_zone))"}
{"instruction": "if altitude exceeds 5m, immediately descend to 4m and continue to waypoint_e", "output": "G(above(5.0) -> F(below(4.0) & X(F(at(waypoint_e)))))"}
{"instruction": "hover until wind drops below 8 knots, then scan area_1 and area_2", "output": "(hover(12) U !wind_speed(8)) & F(!wind_speed(8) & X(F(scan(area_1)) & F(scan(area_2))))"}
{"instruction": "go to wp_beta while staying above 2.5m, then immediately land", "output": "F(at(wp_beta)) & G(above(2.5)) & F(at(wp_beta) & X(land()))"}
{"instruction": "maintain speed until reaching waypoint_a, then hover for 40 seconds", "output": "(moving() U at(waypoint_a)) & F(at(waypoint_a) & X(hover(40)))"}
{"instruction": "scan area_3 while avoiding zone_2 and maintaining battery above 25%", "output": "F(scan(area_3)) & G(!in_area(zone_2)) & G(battery_level(25))"}
{"instruction": "if obstacle_2 detected, change course and continue to waypoint_b", "output": "G(!clear_of(obstacle_2) -> F(clear_of(obstacle_2) & X(F(at(waypoint_b)))))"}
{"instruction": "fly to waypoint_c then waypoint_d, always staying in zone_1", "output": "F(at(waypoint_c) & X(F(at(waypoint_d)))) & G(in_area(zone_1))"}
{"instruction": "hover until system check passes, then move to wp_gamma and scan area_2", "output": "(hover(20) U system_check()) & F(system_check() & X(F(at(wp_gamma) & X(scan(area_2)))))"}
{"instruction": "go to waypoint_e but never enter area_3, maintain altitude above 3.5m", "output": "F(at(waypoint_e)) & G(!in_area(area_3)) & G(above(3.5))"}
{"instruction": "if battery drops to 15%, immediately return to base, land, and start emergency procedures", "output": "G(battery_level(15) -> F(at(base_station) & X(land() & X(emergency_return()))))"}
{"instruction": "maintain distance from obstacle_1 until reaching waypoint_a, then scan area_1", "output": "(clear_of(obstacle_1) U at(waypoint_a)) & F(at(waypoint_a) & X(scan(area_1)))"}
{"instruction": "fly to waypoint_b while avoiding restricted_zone, then hover for 45 seconds", "output": "F(at(waypoint_b)) & G(!in_area(restricted_zone)) & F(at(waypoint_b) & X(hover(45)))"}
{"instruction": "scan area_2 and area_3 sequentially while staying above 2.0m and avoiding perimeter_A", "output": "F(scan(area_2) & X(scan(area_3))) & G(above(2.0)) & G(clear_of(perimeter_A))"}
{"instruction": "go to waypoint_c then waypoint_d then waypoint_e then land, always staying clear of danger_zone", "output": "F(at(waypoint_c) & X(F(at(waypoint_d) & X(F(at(waypoint_e) & X(land())))))) & G(!in_area(danger_zone))"}
{"instruction": "if wind exceeds 30 knots, hover until conditions improve, then resume normal flight", "output": "G(wind_speed(30) -> F(hover(25) U !wind_speed(25))) & F(!wind_speed(25) & X(moving()))"}
{"instruction": "maintain battery above 50% until reaching waypoint_f, then immediately start system check", "output": "(battery_level(50) U at(waypoint_f)) & F(at(waypoint_f) & X(system_check()))"}
{"instruction": "hover for 50 seconds then move to waypoint_a, while avoiding obstacle_1 and staying above 1.5m", "output": "F(hover(50) & X(move_to(waypoint_a))) & G(clear_of(obstacle_1)) & G(above(1.5))"}
{"instruction": "scan area_1 until emergency detected, then immediately return to base and land", "output": "(scan(area_1) U emergency_detected()) & F(emergency_detected() & X(F(at(base_station) & X(land()))))"}
{"instruction": "go to waypoint_b while maintaining altitude between 2m and 4m, then scan area_2", "output": "F(at(waypoint_b)) & G(above(2.0) & below(4.0)) & F(at(waypoint_b) & X(scan(area_2)))"}
{"instruction": "if altitude drops below 0.5m, immediately climb to 2m and continue to waypoint_c", "output": "G(below(0.5) -> F(above(2.0) & X(F(at(waypoint_c)))))"}
{"instruction": "fly to waypoint_d then waypoint_e then waypoint_f, always staying in bounds and avoiding restricted_zone", "output": "F(at(waypoint_d) & X(F(at(waypoint_e) & X(F(at(waypoint_f)))))) & G(in_bounds()) & G(!in_area(restricted_zone))"}
{"instruction": "maintain speed until reaching waypoint_a, then hover for 60 seconds while scanning area_3", "output": "(moving() U at(waypoint_a)) & F(at(waypoint_a) & X(hover(60) & scan(area_3)))"}
{"instruction": "if battery reaches 10%, perform emergency landing at nearest safe location", "output": "G(battery_level(10) -> F(land()))"}
{"instruction": "go to wp_alpha while avoiding obstacle_2 and zone_3, maintain altitude above 2.8m", "output": "F(at(wp_alpha)) & G(clear_of(obstacle_2)) & G(!in_area(zone_3)) & G(above(2.8))"}
{"instruction": "scan area_1 until wind speed exceeds 20 knots, then return to base immediately", "output": "(scan(area_1) U wind_speed(20)) & F(wind_speed(20) & X(F(at(base_station))))"}
{"instruction": "visit waypoint_a and waypoint_b in any order", "output": "F(at(waypoint_a)) & F(at(waypoint_b))"}
{"instruction": "go to waypoint_a and also go to waypoint_b", "output": "F(at(waypoint_a)) & F(at(waypoint_b))"}
{"instruction": "reach both waypoint_a and waypoint_b", "output": "F(at(waypoint_a)) & F(at(waypoint_b))"}
{"instruction": "fly to waypoint_a then waypoint_b in that order", "output": "F(at(waypoint_a) & X(F(at(waypoint_b))))"}
{"instruction": "first go to waypoint_a and after that go to waypoint_b", "output": "F(at(waypoint_a) & X(F(at(waypoint_b))))"}
{"instruction": "navigate to waypoint_a followed by waypoint_b", "output": "F(at(waypoint_a) & X(F(at(waypoint_b))))"}
{"instruction": "visit waypoint_a waypoint_b and waypoint_c in sequence", "output": "F(at(waypoint_a) & X(F(at(waypoint_b) & X(F(at(waypoint_c))))))"}
{"instruction": "go to waypoint_a or waypoint_b", "output": "F(at(waypoint_a)) | F(at(waypoint_b))"}
{"instruction": "fly to either waypoint_a or waypoint_b", "output": "F(at(waypoint_a)) | F(at(waypoint_b))"}
{"instruction": "reach waypoint_a, then immediately proceed to waypoint_b", "output": "F(at(waypoint_a) & X(F(at(waypoint_b))))"}
{"instruction": "scan area_1 and scan area_2 simultaneously", "output": "F(scan(area_1)) & F(scan(area_2))"}
{"instruction": "scan area_1 before scanning area_2", "output": "F(scan(area_1) & X(F(scan(area_2))))"}
{"instruction": "hover then scan then land", "output": "F(hover(10) & X(F(scan(area_1) & X(land()))))"}
{"instruction": "go to waypoint_a and waypoint_b but not necessarily in order", "output": "F(at(waypoint_a)) & F(at(waypoint_b))"}
{"instruction": "complete missions at waypoint_a and waypoint_b", "output": "F(at(waypoint_a)) & F(at(waypoint_b))"}
{"instruction": "return home", "output": "F(at(landing_pad))"}
{"instruction": "go back to start", "output": "F(at(landing_pad))"}
{"instruction": "return to starting position", "output": "F(at(landing_pad))"}
{"instruction": "fly back to launch point", "output": "F(at(landing_pad))"}
{"instruction": "come back to base", "output": "F(at(base_station))"}
{"instruction": "return to base station", "output": "F(at(base_station))"}
{"instruction": "go back to base", "output": "F(at(base_station))"}
{"instruction": "head back home", "output": "F(at(landing_pad))"}
{"instruction": "return to origin", "output": "F(at(landing_pad))"}
{"instruction": "fly back to starting location", "output": "F(at(landing_pad))"}
{"instruction": "go to waypoint_a while keeping clear of obstacle_1", "output": "F(at(waypoint_a)) & G(clear_of(obstacle_1))"}
{"instruction": "fly to waypoint_b and maintain distance from obstacle_2", "output": "F(at(waypoint_b)) & G(clear_of(obstacle_2))"}
{"instruction": "navigate to waypoint_c without hitting obstacle_1", "output": "F(at(waypoint_c)) & G(clear_of(obstacle_1))"}
{"instruction": "scan area_1 and keep away from obstacle_1", "output": "F(scan(area_1)) & G(clear_of(obstacle_1))"}
{"instruction": "scan area_2 while maintaining safe distance from obstacle_2", "output": "F(scan(area_2)) & G(clear_of(obstacle_2))"}
{"instruction": "hover for 10 seconds and avoid obstacle_1", "output": "F(hover(10)) & G(clear_of(obstacle_1))"}
{"instruction": "fly to waypoint_a avoiding all obstacles", "output": "F(at(waypoint_a)) & G(clear_of(obstacles))"}
{"instruction": "never collide with obstacle_1 while scanning area_1", "output": "F(scan(area_1)) & G(clear_of(obstacle_1))"}
{"instruction": "stay away from obstacle_2 during flight to waypoint_b", "output": "F(at(waypoint_b)) & G(clear_of(obstacle_2))"}
{"instruction": "keep distance from perimeter_A while flying", "output": "F(at(waypoint_a)) & G(clear_of(perimeter_A))"}
{"instruction": "avoid perimeter_A when going to waypoint_b", "output": "F(at(waypoint_b)) & G(clear_of(perimeter_A))"}
{"instruction": "maintain clearance from perimeter_A during mission", "output": "F(at(waypoint_a)) & G(clear_of(perimeter_A))"}
{"instruction": "do not get close to obstacle_1", "output": "G(clear_of(obstacle_1))"}
{"instruction": "always keep safe distance from obstacle_2", "output": "G(clear_of(obstacle_2))"}
{"instruction": "never approach perimeter_A", "output": "G(clear_of(perimeter_A))"}
{"instruction": "go to waypoint_a", "output": "F(at(waypoint_a))"}
{"instruction": "fly to waypoint_b", "output": "F(at(waypoint_b))"}
{"instruction": "navigate to waypoint_c", "output": "F(at(waypoint_c))"}
{"instruction": "scan area_1", "output": "F(scan(area_1))"}
{"instruction": "hover for 5 seconds", "output": "F(hover(5))"}
{"instruction": "land now", "output": "F(land())"}
{"instruction": "perform emergency return", "output": "F(emergency_return())"}
{"instruction": "stay above 2 meters", "output": "G(above(2.0))"}
{"instruction": "maintain altitude above 1.5 meters", "output": "G(above(1.5))"}
{"instruction": "always stay in bounds", "output": "G(in_bounds())"}
{"instruction": "navigate to waypoint_f", "output": "F(move_to(waypoint_f))"}
{"instruction": "travel to waypoint_g", "output": "F(move_to(waypoint_g))"}
{"instruction": "proceed to waypoint_h", "output": "F(move_to(waypoint_h))"}
{"instruction": "head to waypoint_i", "output": "F(move_to(waypoint_i))"}
{"instruction": "move towards waypoint_j", "output": "F(move_to(waypoint_j))"}
{"instruction": "fly to waypoint_k", "output": "F(move_to(waypoint_k))"}
{"instruction": "go to waypoint_l", "output": "F(move_to(waypoint_l))"}
{"instruction": "navigate to waypoint_m", "output": "F(move_to(waypoint_m))"}
{"instruction": "travel to waypoint_n", "output": "F(move_to(waypoint_n))"}
{"instruction": "proceed to waypoint_o", "output": "F(move_to(waypoint_o))"}
{"instruction": "head to waypoint_p", "output": "F(move_to(waypoint_p))"}
{"instruction": "move towards waypoint_q", "output": "F(move_to(waypoint_q))"}
{"instruction": "fly to waypoint_r", "output": "F(move_to(waypoint_r))"}
{"instruction": "go to waypoint_s", "output": "F(move_to(waypoint_s))"}
{"instruction": "navigate to waypoint_t", "output": "F(move_to(waypoint_t))"}
{"instruction": "travel to waypoint_u", "output": "F(move_to(waypoint_u))"}
{"instruction": "proceed to waypoint_v", "output": "F(move_to(waypoint_v))"}
{"instruction": "head to waypoint_w", "output": "F(move_to(waypoint_w))"}
{"instruction": "move towards waypoint_x", "output": "F(move_to(waypoint_x))"}
{"instruction": "fly to waypoint_y", "output": "F(move_to(waypoint_y))"}
{"instruction": "go to waypoint_z", "output": "F(move_to(waypoint_z))"}
{"instruction": "navigate to wp_delta", "output": "F(move_to(wp_delta))"}
{"instruction": "travel to wp_epsilon", "output": "F(move_to(wp_epsilon))"}
{"instruction": "proceed to checkpoint_1", "output": "F(move_to(checkpoint_1))"}
{"instruction": "head to location_a", "output": "F(move_to(location_a))"}
{"instruction": "keep altitude above 0.5 meters", "output": "G(above(0.5))"}
{"instruction": "maintain height above 0.8 meters", "output": "G(above(0.8))"}
{"instruction": "stay at elevation above 1.2 meters", "output": "G(above(1.2))"}
{"instruction": "maintain altitude above 1.5 meters", "output": "G(above(1.5))"}
{"instruction": "keep height above 1.8 meters", "output": "G(above(1.8))"}
{"instruction": "maintain altitude above 2.5 meters", "output": "G(above(2.5))"}
{"instruction": "keep altitude above 3.0 meters", "output": "G(above(3.0))"}
{"instruction": "maintain height above 3.5 meters", "output": "G(above(3.5))"}
{"instruction": "stay at elevation above 4.0 meters", "output": "G(above(4.0))"}
{"instruction": "maintain altitude above 4.5 meters", "output": "G(above(4.5))"}
{"instruction": "keep altitude above 5.0 meters", "output": "G(above(5.0))"}
{"instruction": "avoid obstacle_3", "output": "G(clear_of(obstacle_3))"}
{"instruction": "steer clear of obstacle_4", "output": "G(clear_of(obstacle_4))"}
{"instruction": "stay away from obstacle_5", "output": "G(clear_of(obstacle_5))"}
{"instruction": "keep distance from obstacle_6", "output": "G(clear_of(obstacle_6))"}
{"instruction": "don't approach obstacle_7", "output": "G(clear_of(obstacle_7))"}
{"instruction": "avoid barrier_1", "output": "G(clear_of(barrier_1))"}
{"instruction": "steer clear of barrier_2", "output": "G(clear_of(barrier_2))"}
{"instruction": "stay away from barrier_3", "output": "G(clear_of(barrier_3))"}
{"instruction": "keep distance from barrier_4", "output": "G(clear_of(barrier_4))"}
{"instruction": "don't approach barrier_5", "output": "G(clear_of(barrier_5))"}
{"instruction": "always remain in area_4", "output": "G(in_area(area_4))"}
{"instruction": "always stay in area_5", "output": "G(in_area(area_5))"}
{"instruction": "always remain in zone_4", "output": "G(in_area(zone_4))"}
{"instruction": "always stay in sector_a", "output": "G(in_area(sector_a))"}
{"instruction": "in the next step navigate to waypoint_f", "output": "X(move_to(waypoint_f))"}
{"instruction": "in the next step travel to waypoint_g", "output": "X(move_to(waypoint_g))"}
{"instruction": "in the next step proceed to waypoint_h", "output": "X(move_to(waypoint_h))"}
{"instruction": "in the next step head to waypoint_i", "output": "X(move_to(waypoint_i))"}
{"instruction": "in the next step move towards waypoint_j", "output": "X(move_to(waypoint_j))"}
{"instruction": "in the next step fly to waypoint_k", "output": "X(move_to(waypoint_k))"}
{"instruction": "in the next step go to waypoint_l", "output": "X(move_to(waypoint_l))"}
{"instruction": "in the next step navigate to waypoint_m", "output": "X(move_to(waypoint_m))"}
{"instruction": "in the next step travel to waypoint_n", "output": "X(move_to(waypoint_n))"}
{"instruction": "in the next step proceed to waypoint_o", "output": "X(move_to(waypoint_o))"}
{"instruction": "in the next step head to waypoint_p", "output": "X(move_to(waypoint_p))"}
{"instruction": "in the next step move towards waypoint_q", "output": "X(move_to(waypoint_q))"}
{"instruction": "in the next step fly to waypoint_r", "output": "X(move_to(waypoint_r))"}
{"instruction": "in the next step go to waypoint_s", "output": "X(move_to(waypoint_s))"}
{"instruction": "in the next step navigate to waypoint_t", "output": "X(move_to(waypoint_t))"}
{"instruction": "in the next step travel to waypoint_u", "output": "X(move_to(waypoint_u))"}
{"instruction": "in the next step proceed to waypoint_v", "output": "X(move_to(waypoint_v))"}
{"instruction": "in the next step head to waypoint_w", "output": "X(move_to(waypoint_w))"}
{"instruction": "in the next step move towards waypoint_x", "output": "X(move_to(waypoint_x))"}
{"instruction": "in the next step fly to waypoint_y", "output": "X(move_to(waypoint_y))"}
{"instruction": "go to waypoint_f and waypoint_g", "output": "F(at(waypoint_f)) & F(at(waypoint_g))"}
{"instruction": "reach waypoint_h and waypoint_i", "output": "F(at(waypoint_h)) & F(at(waypoint_i))"}
{"instruction": "visit waypoint_j and waypoint_k", "output": "F(at(waypoint_j)) & F(at(waypoint_k))"}
{"instruction": "fly to waypoint_l and also go to waypoint_m", "output": "F(at(waypoint_l)) & F(at(waypoint_m))"}
{"instruction": "navigate to waypoint_n and waypoint_o", "output": "F(at(waypoint_n)) & F(at(waypoint_o))"}
{"instruction": "scan area_4 while avoiding obstacle_3", "output": "F(scan(area_4)) & G(clear_of(obstacle_3))"}
{"instruction": "hover for 10 seconds while staying clear of obstacle_4", "output": "F(hover(10)) & G(clear_of(obstacle_4))"}
{"instruction": "maintain altitude above 1.5m and stay in bounds", "output": "G(above(1.5)) & G(in_bounds())"}
{"instruction": "go to waypoint_p while avoiding obstacle_5", "output": "F(at(waypoint_p)) & G(clear_of(obstacle_5))"}
{"instruction": "scan area_5 and maintain altitude above 2.0m", "output": "F(scan(area_5)) & G(above(2.0))"}
{"instruction": "travel to waypoint_q and waypoint_r", "output": "F(at(waypoint_q)) & F(at(waypoint_r))"}
{"instruction": "proceed to waypoint_s and waypoint_t", "output": "F(at(waypoint_s)) & F(at(waypoint_t))"}
{"instruction": "head to waypoint_u and waypoint_v", "output": "F(at(waypoint_u)) & F(at(waypoint_v))"}
{"instruction": "move towards waypoint_w and waypoint_x", "output": "F(at(waypoint_w)) & F(at(waypoint_x))"}
{"instruction": "fly to waypoint_y and waypoint_z", "output": "F(at(waypoint_y)) & F(at(waypoint_z))"}
{"instruction": "survey area_6 while avoiding barrier_1", "output": "F(scan(area_6)) & G(clear_of(barrier_1))"}
{"instruction": "inspect area_7 while staying clear of barrier_2", "output": "F(scan(area_7)) & G(clear_of(barrier_2))"}
{"instruction": "monitor area_8 and maintain altitude above 2.5m", "output": "F(scan(area_8)) & G(above(2.5))"}
{"instruction": "check area_9 while avoiding obstacle_6", "output": "F(scan(area_9)) & G(clear_of(obstacle_6))"}
{"instruction": "scan area_10 and stay in bounds", "output": "F(scan(area_10)) & G(in_bounds())"}
{"instruction": "navigate to wp_delta and wp_epsilon", "output": "F(at(wp_delta)) & F(at(wp_epsilon))"}
{"instruction": "travel to checkpoint_1 and checkpoint_2", "output": "F(at(checkpoint_1)) & F(at(checkpoint_2))"}
{"instruction": "proceed to location_a and location_b", "output": "F(at(location_a)) & F(at(location_b))"}
{"instruction": "head to location_c and location_d", "output": "F(at(location_c)) & F(at(location_d))"}
{"instruction": "move towards location_e and location_f", "output": "F(at(location_e)) & F(at(location_f))"}
{"instruction": "fly to location_g while avoiding barrier_3", "output": "F(at(location_g)) & G(clear_of(barrier_3))"}
{"instruction": "go to location_h and maintain altitude above 3.0m", "output": "F(at(location_h)) & G(above(3.0))"}
{"instruction": "navigate to location_i while staying clear of obstacle_7", "output": "F(at(location_i)) & G(clear_of(obstacle_7))"}
{"instruction": "travel to location_j and keep distance from barrier_4", "output": "F(at(location_j)) & G(clear_of(barrier_4))"}
{"instruction": "proceed to zone_5 and maintain height above 3.5m", "output": "F(at(zone_5)) & G(above(3.5))"}
{"instruction": "reach waypoint_f or waypoint_g", "output": "F(at(waypoint_f)) | F(at(waypoint_g))"}
{"instruction": "fly to waypoint_h or waypoint_i", "output": "F(at(waypoint_h)) | F(at(waypoint_i))"}
{"instruction": "go to waypoint_j or waypoint_k", "output": "F(at(waypoint_j)) | F(at(waypoint_k))"}
{"instruction": "navigate to waypoint_l or waypoint_m", "output": "F(at(waypoint_l)) | F(at(waypoint_m))"}
{"instruction": "travel to waypoint_n or waypoint_o", "output": "F(at(waypoint_n)) | F(at(waypoint_o))"}
{"instruction": "proceed to waypoint_p or waypoint_q", "output": "F(at(waypoint_p)) | F(at(waypoint_q))"}
{"instruction": "head to waypoint_r or waypoint_s", "output": "F(at(waypoint_r)) | F(at(waypoint_s))"}
{"instruction": "move towards waypoint_t or waypoint_u", "output": "F(at(waypoint_t)) | F(at(waypoint_u))"}
{"instruction": "fly to waypoint_v or waypoint_w", "output": "F(at(waypoint_v)) | F(at(waypoint_w))"}
{"instruction": "go to waypoint_x or waypoint_y", "output": "F(at(waypoint_x)) | F(at(waypoint_y))"}
{"instruction": "never enter area_4", "output": "G(!in_area(area_4))"}
{"instruction": "avoid going below 1.0 meters", "output": "G(!below(1.0))"}
{"instruction": "don't approach obstacle_3", "output": "G(!near(obstacle_3, 2.0))"}
{"instruction": "never go above 4.0 meters", "output": "G(!above(4.0))"}
{"instruction": "don't enter zone_5", "output": "G(!in_area(zone_5))"}
{"instruction": "avoid obstacle_4 completely", "output": "G(!clear_of(obstacle_4))"}
{"instruction": "never fly below 0.8m", "output": "G(!below(0.8))"}
{"instruction": "don't get near barrier_1", "output": "G(!near(barrier_1, 2.0))"}
{"instruction": "never enter sector_b", "output": "G(!in_area(sector_b))"}
{"instruction": "avoid going above 5.0 meters", "output": "G(!above(5.0))"}
{"instruction": "stay above 1.5 meters until reaching waypoint_f", "output": "above(1.5) U at(waypoint_f)"}
{"instruction": "maintain altitude above 2.0m until waypoint_g is reached", "output": "above(2.0) U at(waypoint_g)"}
{"instruction": "keep scanning until battery drops below 25%", "output": "scan(area_4) U battery_level(25)"}
{"instruction": "hover for 15 seconds until wind speed decreases below 10 knots", "output": "hover(15) U !wind_speed(10)"}
{"instruction": "remain in area_5 until cleared", "output": "in_area(area_5) U !in_area(area_5)"}
{"instruction": "stay clear of obstacle_3 until reaching waypoint_h", "output": "clear_of(obstacle_3) U at(waypoint_h)"}
{"instruction": "maintain battery above 30% until landing", "output": "battery_level(30) U land()"}
{"instruction": "keep moving until you reach waypoint_i", "output": "moving() U at(waypoint_i)"}
{"instruction": "stay in bounds until battery level drops below 35%", "output": "in_bounds() U battery_level(35)"}
{"instruction": "maintain position above 2.5m until landing command is given", "output": "above(2.5) U land()"}
{"instruction": "continue hovering until wind speed exceeds 20 knots", "output": "hover(10) U wind_speed(20)"}
{"instruction": "keep distance from obstacle_4 until mission completes", "output": "clear_of(obstacle_4) U at(base_station)"}
{"instruction": "stay above 1.8 meters until entering area_6", "output": "above(1.8) U in_area(area_6)"}
{"instruction": "maintain speed until reaching waypoint_j", "output": "moving() U at(waypoint_j)"}
{"instruction": "keep altitude below 3.0m until scanning area_7", "output": "below(3.0) U scan(area_7)"}
{"instruction": "stay near waypoint_k until area_8 is scanned", "output": "near(waypoint_k, 1.0) U scan(area_8)"}
{"instruction": "maintain position until emergency return is triggered", "output": "stationary() U emergency_return()"}
{"instruction": "keep altitude below 4.5 meters until reaching wp_delta", "output": "below(4.5) U at(wp_delta)"}
{"instruction": "stay clear of barrier_1 until mission starts", "output": "clear_of(barrier_1) U move_to(waypoint_l)"}
{"instruction": "maintain battery above 40% until landing at landing_pad", "output": "battery_level(40) U at(landing_pad)"}
{"instruction": "keep moving until system check is complete", "output": "moving() U system_check()"}
{"instruction": "stay above 2.2 meters until entering zone_6", "output": "above(2.2) U in_area(zone_6)"}
{"instruction": "maintain distance from obstacle_5 until reaching waypoint_m", "output": "clear_of(obstacle_5) U at(waypoint_m)"}
{"instruction": "keep hovering until wind speed drops below 8 knots", "output": "hover(12) U !wind_speed(8)"}
{"instruction": "stay in area_9 until waypoint_n is reached", "output": "in_area(area_9) U at(waypoint_n)"}
{"instruction": "maintain altitude above 2.8 meters until scanning area_10", "output": "above(2.8) U scan(area_10)"}
{"instruction": "keep battery above 45% until returning to base_station", "output": "battery_level(45) U at(base_station)"}
{"instruction": "stay clear of danger_zone until landing command", "output": "clear_of(danger_zone) U land()"}
{"instruction": "maintain position until emergency is detected", "output": "stationary() U emergency_detected()"}
{"instruction": "keep moving until reaching wp_epsilon", "output": "moving() U at(wp_epsilon)"}
{"instruction": "stay above 3.2 meters until obstacle_6 is cleared", "output": "above(3.2) U clear_of(obstacle_6)"}
{"instruction": "maintain distance from restricted_zone until waypoint_o", "output": "clear_of(restricted_zone) U at(waypoint_o)"}
{"instruction": "keep hovering until wind conditions are safe", "output": "hover(18) U !wind_speed(15)"}
{"instruction": "stay near waypoint_p until area_4 scan completes", "output": "near(waypoint_p, 1.5) U scan(area_4)"}
{"instruction": "maintain altitude below 3.5 meters until landing", "output": "below(3.5) U land()"}
{"instruction": "go to waypoint_f then immediately scan area_4", "output": "F(at(waypoint_f) & X(scan(area_4)))"}
{"instruction": "move to waypoint_g then immediately hover for 8 seconds", "output": "F(at(waypoint_g) & X(hover(8)))"}
{"instruction": "reach waypoint_h then eventually reach waypoint_i", "output": "F(at(waypoint_h) & X(F(at(waypoint_i))))"}
{"instruction": "land at waypoint_j then immediately start system check", "output": "F(at(waypoint_j) & X(system_check()))"}
{"instruction": "fly to waypoint_k then immediately scan area_5", "output": "F(at(waypoint_k) & X(scan(area_5)))"}
{"instruction": "reach waypoint_l then immediately move to waypoint_m", "output": "F(at(waypoint_l) & X(F(at(waypoint_m))))"}
{"instruction": "hover for 12 seconds then immediately fly to waypoint_n", "output": "F(hover(12) & X(move_to(waypoint_n)))"}
{"instruction": "scan area_6 then immediately go to waypoint_o", "output": "F(scan(area_6) & X(move_to(waypoint_o)))"}
{"instruction": "reach waypoint_p then immediately hover for 15 seconds", "output": "F(at(waypoint_p) & X(hover(15)))"}
{"instruction": "land then immediately start emergency procedures", "output": "F(land() & X(emergency_return()))"}
{"instruction": "fly to waypoint_q then immediately scan area_7", "output": "F(at(waypoint_q) & X(scan(area_7)))"}
{"instruction": "reach waypoint_r then immediately go to waypoint_s", "output": "F(at(waypoint_r) & X(F(at(waypoint_s))))"}
{"instruction": "hover for 20 seconds then immediately move to waypoint_t", "output": "F(hover(20) & X(move_to(waypoint_t)))"}
{"instruction": "scan area_8 then immediately fly to waypoint_u", "output": "F(scan(area_8) & X(move_to(waypoint_u)))"}
{"instruction": "reach waypoint_v then immediately start system check", "output": "F(at(waypoint_v) & X(system_check()))"}
{"instruction": "fly to waypoint_w then immediately hover for 25 seconds", "output": "F(at(waypoint_w) & X(hover(25)))"}
{"instruction": "scan area_9 then immediately go to waypoint_x", "output": "F(scan(area_9) & X(move_to(waypoint_x)))"}
{"instruction": "reach waypoint_y then immediately scan area_10", "output": "F(at(waypoint_y) & X(scan(area_10)))"}
{"instruction": "hover for 30 seconds then immediately move to waypoint_z", "output": "F(hover(30) & X(move_to(waypoint_z)))"}
{"instruction": "land at landing_pad then immediately start emergency return", "output": "F(at(landing_pad) & X(emergency_return()))"}
{"instruction": "fly to wp_delta then immediately hover for 18 seconds", "output": "F(at(wp_delta) & X(hover(18)))"}
{"instruction": "scan area_4 then immediately go to wp_epsilon", "output": "F(scan(area_4) & X(move_to(wp_epsilon)))"}
{"instruction": "reach checkpoint_1 then immediately move to checkpoint_2", "output": "F(at(checkpoint_1) & X(F(at(checkpoint_2))))"}
{"instruction": "hover for 35 seconds then immediately scan area_5", "output": "F(hover(35) & X(scan(area_5)))"}
{"instruction": "fly to location_a then immediately land", "output": "F(at(location_a) & X(land()))"}
{"instruction": "scan area_6 then immediately hover for 22 seconds", "output": "F(scan(area_6) & X(hover(22)))"}
{"instruction": "reach location_b then immediately go to location_c", "output": "F(at(location_b) & X(F(at(location_c))))"}
{"instruction": "hover for 40 seconds then immediately fly to location_d", "output": "F(hover(40) & X(move_to(location_d)))"}
{"instruction": "scan area_7 then immediately move to location_e", "output": "F(scan(area_7) & X(move_to(location_e)))"}
{"instruction": "reach location_f then immediately hover for 28 seconds", "output": "F(at(location_f) & X(hover(28)))"}
{"instruction": "fly to location_g then immediately start system check", "output": "F(at(location_g) & X(system_check()))"}
{"instruction": "hover for 45 seconds then immediately scan area_8", "output": "F(hover(45) & X(scan(area_8)))"}
{"instruction": "scan area_9 then immediately go to location_h", "output": "F(scan(area_9) & X(move_to(location_h)))"}
{"instruction": "reach location_i then immediately hover for 32 seconds", "output": "F(at(location_i) & X(hover(32)))"}
{"instruction": "fly to location_j then immediately move to waypoint_f", "output": "F(at(location_j) & X(F(at(waypoint_f))))"}
{"instruction": "hover for 50 seconds then immediately land", "output": "F(hover(50) & X(land()))"}
{"instruction": "scan area_10 then immediately fly to waypoint_g", "output": "F(scan(area_10) & X(move_to(waypoint_g)))"}
{"instruction": "reach zone_6 then immediately scan area_4", "output": "F(at(zone_6) & X(scan(area_4)))"}
{"instruction": "hover for 55 seconds then immediately move to base_station", "output": "F(hover(55) & X(move_to(base_station)))"}
{"instruction": "fly to sector_a then immediately hover for 38 seconds", "output": "F(at(sector_a) & X(hover(38)))"}
{"instruction": "go to waypoint_f while avoiding obstacle_3 and maintaining altitude above 1.5m", "output": "F(at(waypoint_f)) & G(clear_of(obstacle_3)) & G(above(1.5))"}
{"instruction": "scan area_4 while staying clear of obstacle_4 and maintaining altitude above 2.0m", "output": "F(scan(area_4)) & G(clear_of(obstacle_4)) & G(above(2.0))"}
{"instruction": "maintain battery above 30% until landing, then start system check", "output": "(battery_level(30) U land()) & F(land() & X(system_check()))"}
{"instruction": "fly to waypoint_g then waypoint_h while staying above 2.5m and avoiding obstacle_5", "output": "F(at(waypoint_g) & X(F(at(waypoint_h)))) & G(above(2.5)) & G(clear_of(obstacle_5))"}
{"instruction": "hover for 15 seconds then move to waypoint_i, but never enter area_5", "output": "F(hover(15) & X(move_to(waypoint_i))) & G(!in_area(area_5))"}
{"instruction": "scan area_6 until battery drops below 35%, then return to base", "output": "(scan(area_6) U battery_level(35)) & F(battery_level(35) & X(F(at(base_station))))"}
{"instruction": "maintain speed until reaching waypoint_j, then immediately land", "output": "(moving() U at(waypoint_j)) & F(at(waypoint_j) & X(land()))"}
{"instruction": "go to waypoint_k and waypoint_l sequentially while staying above 1.8m", "output": "F(at(waypoint_k) & X(F(at(waypoint_l)))) & G(above(1.8))"}
{"instruction": "if obstacle_6 detected, change altitude to 3.0m and continue to waypoint_m", "output": "G(!clear_of(obstacle_6) -> F(above(3.0) & X(F(at(waypoint_m)))))"}
{"instruction": "hover until wind drops below 10 knots, then fly to waypoint_n and scan area_7", "output": "(hover(10) U !wind_speed(10)) & F(!wind_speed(10) & X(F(at(waypoint_n) & X(scan(area_7)))))"}
{"instruction": "maintain battery above 40% until reaching waypoint_o, then hover for 20 seconds", "output": "(battery_level(40) U at(waypoint_o)) & F(at(waypoint_o) & X(hover(20)))"}
{"instruction": "fly to waypoint_p then waypoint_q then waypoint_r, always staying in bounds and avoiding area_8", "output": "F(at(waypoint_p) & X(F(at(waypoint_q) & X(F(at(waypoint_r)))))) & G(in_bounds()) & G(!in_area(area_8))"}
{"instruction": "if altitude exceeds 4.5m, immediately descend to 4.0m and continue to waypoint_s", "output": "G(above(4.5) -> F(below(4.0) & X(F(at(waypoint_s)))))"}
{"instruction": "scan area_9 and area_10 sequentially while staying above 2.2m and avoiding obstacle_7", "output": "F(scan(area_9) & X(scan(area_10))) & G(above(2.2)) & G(clear_of(obstacle_7))"}
{"instruction": "maintain distance from barrier_1 until reaching waypoint_t, then hover for 25 seconds", "output": "(clear_of(barrier_1) U at(waypoint_t)) & F(at(waypoint_t) & X(hover(25)))"}
{"instruction": "go to waypoint_u while avoiding area_9, maintain altitude above 3.0m", "output": "F(at(waypoint_u)) & G(!in_area(area_9)) & G(above(3.0))"}
{"instruction": "if battery drops to 25%, immediately return to base and land", "output": "G(battery_level(25) -> F(at(base_station) & X(land())))"}
{"instruction": "hover for 30 seconds then move to waypoint_v, while avoiding obstacle_8 and staying above 2.8m", "output": "F(hover(30) & X(move_to(waypoint_v))) & G(clear_of(obstacle_8)) & G(above(2.8))"}
{"instruction": "scan area_4 until emergency detected, then immediately return to base and land", "output": "(scan(area_4) U emergency_detected()) & F(emergency_detected() & X(F(at(base_station) & X(land()))))"}
{"instruction": "go to waypoint_w while maintaining altitude between 2.0m and 3.5m, then scan area_5", "output": "F(at(waypoint_w)) & G(above(2.0) & below(3.5)) & F(at(waypoint_w) & X(scan(area_5)))"}
{"instruction": "if altitude drops below 1.2m, immediately climb to 2.5m and continue to waypoint_x", "output": "G(below(1.2) -> F(above(2.5) & X(F(at(waypoint_x)))))"}
{"instruction": "fly to waypoint_y then waypoint_z then wp_delta, always staying in bounds and avoiding area_6", "output": "F(at(waypoint_y) & X(F(at(waypoint_z) & X(F(at(wp_delta)))))) & G(in_bounds()) & G(!in_area(area_6))"}
{"instruction": "maintain speed until reaching waypoint_g, then hover for 35 seconds while scanning area_7", "output": "(moving() U at(waypoint_g)) & F(at(waypoint_g) & X(hover(35) & scan(area_7)))"}
{"instruction": "if battery reaches 20%, perform emergency landing at nearest safe location", "output": "G(battery_level(20) -> F(land()))"}
{"instruction": "go to wp_epsilon while avoiding barrier_2 and area_8, maintain altitude above 3.2m", "output": "F(at(wp_epsilon)) & G(clear_of(barrier_2)) & G(!in_area(area_8)) & G(above(3.2))"}
{"instruction": "scan area_9 until wind speed exceeds 25 knots, then return to base immediately", "output": "(scan(area_9) U wind_speed(25)) & F(wind_speed(25) & X(F(at(base_station))))"}
{"instruction": "visit checkpoint_1 and checkpoint_2 in any order while staying above 2.5m and avoiding obstacle_3", "output": "F(at(checkpoint_1)) & F(at(checkpoint_2)) & G(above(2.5)) & G(clear_of(obstacle_3))"}
{"instruction": "maintain battery above 45% until reaching location_a, then immediately start system check", "output": "(battery_level(45) U at(location_a)) & F(at(location_a) & X(system_check()))"}
{"instruction": "if wind exceeds 30 knots, hover until conditions improve, then resume scanning", "output": "G(wind_speed(30) -> F(hover(20) U !wind_speed(25)))"}
{"instruction": "go to location_b then location_c, always avoiding area_10 and maintaining altitude above 3.5m", "output": "F(at(location_b) & X(F(at(location_c)))) & G(!in_area(area_10)) & G(above(3.5))"}
{"instruction": "survey sector_b while avoiding barrier_5 and maintaining altitude above 4.0m", "output": "F(scan(sector_b)) & G(clear_of(barrier_5)) & G(above(4.0))"}
{"instruction": "sustain altitude above 3.0 meters up to the moment emergency is detected", "output": "above(3.0) U emergency_detected()"}
{"instruction": "preserve distance from obstacle_1 until reaching waypoint_c", "output": "clear_of(obstacle_1) U at(waypoint_c)"}
{"instruction": "keep battery above 25 percent until landing occurs", "output": "battery_level(25) U land()"}
{"instruction": "hold position above 2.5 meters until waypoint_d is reached", "output": "above(2.5) U at(waypoint_d)"}
{"instruction": "continue staying in bounds until battery drops to 30 percent", "output": "in_bounds() U battery_level(30)"}
{"instruction": "maintain speed until you arrive at waypoint_e", "output": "moving() U at(waypoint_e)"}
{"instruction": "persist in hovering until wind conditions improve below 12 knots", "output": "hover(10) U !wind_speed(12)"}
{"instruction": "keep scanning area_1 until battery level falls below 40 percent", "output": "scan(area_1) U battery_level(40)"}
{"instruction": "remain stationary until move command is executed", "output": "stationary() U move_to(waypoint_f)"}
{"instruction": "stay above 1.8 meters until entering area_2", "output": "above(1.8) U in_area(area_2)"}
{"instruction": "maintain clearance from obstacle_2 until reaching waypoint_g", "output": "clear_of(obstacle_2) U at(waypoint_g)"}
{"instruction": "keep altitude below 4.0 meters until scanning area_3", "output": "below(4.0) U scan(area_3)"}
{"instruction": "persist in zone_1 until waypoint_h is attained", "output": "in_area(zone_1) U at(waypoint_h)"}
{"instruction": "continue hovering until system check completes", "output": "hover(15) U system_check()"}
{"instruction": "maintain battery above 35 percent until emergency return is triggered", "output": "battery_level(35) U emergency_return()"}
{"instruction": "achieve waypoint_b while simultaneously maintaining distance from restricted_zone", "output": "F(at(waypoint_b)) & G(!in_area(restricted_zone))"}
{"instruction": "scan area_1 is the objective, but strictly avoid obstacle_1", "output": "F(scan(area_1)) & G(clear_of(obstacle_1))"}
{"instruction": "fly to wp_alpha, but under no circumstances exceed 4.0 meters altitude", "output": "F(at(wp_alpha)) & G(!above(4.0))"}
{"instruction": "navigate to waypoint_i while concurrently staying clear of danger_zone", "output": "F(at(waypoint_i)) & G(!in_area(danger_zone))"}
{"instruction": "reach waypoint_j is the goal, but never violate altitude above 3.5 meters", "output": "F(at(waypoint_j)) & G(!above(3.5))"}
{"instruction": "survey area_4 while simultaneously maintaining height above 2.0 meters", "output": "F(scan(area_4)) & G(above(2.0))"}
{"instruction": "move to waypoint_k, but consistently avoid obstacle_3", "output": "F(at(waypoint_k)) & G(clear_of(obstacle_3))"}
{"instruction": "hover for 20 seconds while simultaneously staying in bounds", "output": "F(hover(20)) & G(in_bounds())"}
{"instruction": "land at landing_pad is the objective, but strictly maintain clearance from barrier_1", "output": "F(at(landing_pad)) & G(clear_of(barrier_1))"}
{"instruction": "go to waypoint_l while concurrently keeping altitude above 1.5 meters", "output": "F(at(waypoint_l)) & G(above(1.5))"}
{"instruction": "scan area_5 is the goal, but under no circumstances enter restricted_zone", "output": "F(scan(area_5)) & G(!in_area(restricted_zone))"}
{"instruction": "proceed to waypoint_m while simultaneously avoiding obstacle_4", "output": "F(at(waypoint_m)) & G(clear_of(obstacle_4))"}
{"instruction": "reach wp_beta while consistently maintaining distance from perimeter_A", "output": "F(at(wp_beta)) & G(clear_of(perimeter_A))"}
{"instruction": "navigate to waypoint_n, but strictly avoid going below 0.8 meters", "output": "F(at(waypoint_n)) & G(!below(0.8))"}
{"instruction": "fly to base_station while simultaneously staying clear of area_6", "output": "F(at(base_station)) & G(!in_area(area_6))"}
{"instruction": "complete reaching waypoint_a and the very next step is scan area_1", "output": "F(at(waypoint_a) & X(scan(area_1)))"}
{"instruction": "upon landing's completion, emergency_return must be the next action", "output": "F(land() & X(emergency_return()))"}
{"instruction": "as soon as hovering for 10 seconds is finished, initiate move_to waypoint_n", "output": "F(hover(10) & X(move_to(waypoint_n)))"}
{"instruction": "complete scanning area_2 and the immediate next step is go to waypoint_o", "output": "F(scan(area_2) & X(move_to(waypoint_o)))"}
{"instruction": "upon reaching waypoint_p's completion, system_check must be the next action", "output": "F(at(waypoint_p) & X(system_check()))"}
{"instruction": "as soon as moving to waypoint_q is finished, initiate hover for 25 seconds", "output": "F(at(waypoint_q) & X(hover(25)))"}
{"instruction": "complete hovering for 35 seconds and the immediate next step is scan area_4", "output": "F(hover(35) & X(scan(area_4)))"}
{"instruction": "upon scanning area_3's completion, move_to waypoint_r must be the next action", "output": "F(scan(area_3) & X(move_to(waypoint_r)))"}
{"instruction": "as soon as reaching waypoint_s is finished, initiate hover for 30 seconds", "output": "F(at(waypoint_s) & X(hover(30)))"}
{"instruction": "complete system check and the very next step is return to base", "output": "F(system_check() & X(move_to(base_station)))"}
{"instruction": "if emergency is detected, immediately land", "output": "G(emergency_detected() -> F(land()))"}
{"instruction": "whenever battery reaches 20 percent, eventually perform return to base and land", "output": "G(battery_level(20) -> F(at(base_station) & X(land())))"}
{"instruction": "in the event entering restricted_zone occurs, exit must follow", "output": "G(in_area(restricted_zone) -> F(!in_area(restricted_zone)))"}
{"instruction": "if altitude exceeds 5.0 meters, immediately descend to 4.0 meters", "output": "G(above(5.0) -> F(below(4.0)))"}
{"instruction": "whenever obstacle_1 is observed, eventually change course to avoid it", "output": "G(!clear_of(obstacle_1) -> F(clear_of(obstacle_1)))"}
{"instruction": "in the event battery drops below 15 percent, emergency return must follow", "output": "G(battery_level(15) -> F(emergency_return()))"}
{"instruction": "if wind speed exceeds 25 knots, immediately return to base", "output": "G(wind_speed(25) -> F(emergency_return()))"}
{"instruction": "whenever going out of bounds is observed, eventually return to flight zone", "output": "G(!in_bounds() -> F(in_bounds()))"}
{"instruction": "in the event altitude drops below 0.5 meters, climb to 2.0 meters must follow", "output": "G(below(0.5) -> F(above(2.0)))"}
{"instruction": "if system check fails, immediately return to base", "output": "G(!system_check() -> F(at(base_station)))"}
